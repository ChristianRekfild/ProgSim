./Data - Всё, что связано с длительным хранением данных. 
         Картинки, заготовки, файлы с предварительными данными, возможно файлы сохранения и загрузки.
./Data/Resourses - Данные, необходимые для работы приложения.
./Data/Resourses/Images - картинки

./Infrastructure - Различные утилиты и классы-помошники.
./Infrastructure/Commands - Команды - важная часть паттерна MVVM. 
                            Реализуют логику, которая выполняется при взаимодействии с визуальными элементами View. 
                            Например: при нажатии на кнопку вызывается команда.
./Infrastructure/Commands/Base - Базовые классы для комманд.
./Infrastructure/Commands/Stores - Объекты, хранящие промежуточное состояние приложения (НЕ СОСТОЯНИЕ СУЩНОСТЕЙ!).
                                   Например: текущее View.
./Infrastructure/HostBuilderExtensions - Статические классы, инкапсулирующие методы, отвечающие за настройку хоста приложения и
                                         контейнера внедрения зависимостей.

./Models - Сущности приложения и "бизнес-логики".

./Services - Классы, которые выполняют всю работу связанную с "бизнес-логикой". 
             Изменение сущностей, подключение к бд, работа с файлами - это всё сервисы.

./ViewModels - ViewModel - важная часть паттерна MVVM. Это классы-посредники между представлением и моделью.
               ViewModel содержит свойства к которым будет привязываться View. ВАЖНО! ViewModel не ходит к данным напрямую. 
               Вместо этого она обращается к публичным методам сервисов из которых вернётся необходимая информация.
./ViewModel/Base - Базовый класс для всех ViewModel.

./Views - Страницы и окна приложения, которые увидит пользователь приложения (фронт, представление).

./Views/GameSceneTabs - Страницы вкладок основного экрана приложения

./Views/Dialogs - Страницы всплывающих окон в приложении
